### https://rubyyagi.com/how-to-run-tests-in-parallel-in-github-actions/
### https://github.com/rubyyagi/bookmarker/blob/main/.github/workflows/test.yml

name: UnitTestMatrix
on: [push, pull_request]
jobs:
  maven-project-compile:
    timeout-minutes: 120 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run commands
        run: |
          ./mvnw compile 

  maven-project-test:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run commands
        run: |
          ./mvnw test

  maven-project-package:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run commands
        run: |
          ./mvnw package


  maven-project-verify:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run commands
        run: |
          ./mvnw verify

  maven-project-install:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run commands
        run: |
          ./mvnw install
      - name: upload artefacts 
        uses: actions/upload-artifact@v2
        with: 
          name: spring-petclinic-2.7.0-SNAPSHOT.jar
          path: ./target/spring-petclinic-2.7.0-SNAPSHOT.jar


  maven-project-clean:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    needs: [ 
      maven-project-compile,
      maven-project-test,
      maven-project-package,
      maven-project-verify,
      maven-project-install 
    ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run commands
        run: |
          ./mvnw clean

      - name: download artefacts 
        uses: actions/download-artifact@v2
        with: 
          name: spring-petclinic-2.7.0-SNAPSHOT.jar
          path: ./target

      - name: Run docker build
        run: docker build --tag wiremock-stubs .

